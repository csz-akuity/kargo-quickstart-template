---
# Kargo RBAC Configuration - Team Alpha specific
# This file defines roles and bindings for the kargo-quickstart-template-team-alpha project

---
# Admin role - full access to all stages and promotions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
rules:
- apiGroups: ["kargo.akuity.io"]
  resources: ["stages", "promotions", "freights", "warehouses"]
  verbs: ["*"]
- apiGroups: ["argoproj.io"]
  resources: ["analysisruns", "analysistemplates"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["secrets", "serviceaccounts", "events"]
  verbs: ["*"]

---
# Developer role - can promote to dev and staging
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
rules:
- apiGroups: ["kargo.akuity.io"]
  resources: ["stages", "promotions", "freights"]
  verbs: ["get", "list", "watch", "promote"]
- apiGroups: ["argoproj.io"]
  resources: ["analysisruns", "analysistemplates"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]

---
# Viewer role - read-only access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
rules:
- apiGroups: ["kargo.akuity.io"]
  resources: ["stages", "promotions", "freights", "warehouses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["argoproj.io"]
  resources: ["analysisruns", "analysistemplates"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]

---
# ServiceAccount for admin user
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
  annotations:
    # Map to OIDC claims for SSO integration
    rbac.kargo.akuity.io/claim.email: "admin@example.com"
    rbac.kargo.akuity.io/claim.groups: "admin"

---
# ServiceAccount for developers
apiVersion: v1
kind: ServiceAccount
metadata:
  name: developer
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
  annotations:
    # Map to OIDC claims for SSO integration
    rbac.kargo.akuity.io/claim.email: "developer@example.com"
    rbac.kargo.akuity.io/claim.groups: "developers"

---
# ServiceAccount for viewers
apiVersion: v1
kind: ServiceAccount
metadata:
  name: viewer
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
  annotations:
    # Map to OIDC claims for SSO integration
    rbac.kargo.akuity.io/claim.email: "viewer@example.com"
    rbac.kargo.akuity.io/claim.groups: "viewers"

---
# RoleBinding for admin
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin-binding
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
subjects:
- kind: ServiceAccount
  name: admin
  namespace: kargo-quickstart-template-team-alpha
roleRef:
  kind: Role
  name: admin
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding for developers
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: developer-binding
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
subjects:
- kind: ServiceAccount
  name: developer
  namespace: kargo-quickstart-template-team-alpha
roleRef:
  kind: Role
  name: developer
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding for viewers
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: viewer-binding
  namespace: kargo-quickstart-template-team-alpha
  labels:
    team: alpha
subjects:
- kind: ServiceAccount
  name: viewer
  namespace: kargo-quickstart-template-team-alpha
roleRef:
  kind: Role
  name: viewer
  apiGroup: rbac.authorization.k8s.io
